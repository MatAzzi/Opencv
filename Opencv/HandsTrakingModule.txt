import cv2 as cv
import mediapipe as mp
import time

class handDetector():
    def __init__(self,mode=False, maxHands=2,detecConf=0.5, trackConf=0.5):
        self.mode =mode
        self.maxHands = maxHands
        self.detecConf = detecConf
        self.trackConf = trackConf
        self.mpHands =mp.solutions.hands
        self.hands = self.mpHands.Hands(self.mode, self.maxHands, self.detecConf, self.trackConf)
        self.mpDraw =mp.solutions.drawing_utils

    def findHands(self, img, draw = True):
        imgRGB = cv.cvtColor(img, cv.COLOR_BGR2RGB)
        self.results = self.hands.process(imgRGB)
        if self.results.multi_hand_landmarks:
            for handLms in self.results.multi_hand_landmarks: #leo los puntos de las manos
                if draw:
                    self.mpDraw.draw_landmarks(img, handLms, self.mpHands.HAND_CONNECTIONS)
        return img
    
    def findPosition(self, img, handNum=0, draw=True):
        lmList = []
        if self.results.multi_hand_landmarks:
            Myhand = self.results.multi_hand_landmarks[handNum]
            for id, lm in enumerate(Myhand.landmark): #enumera y saca el dato
                        h, w, c = img.shape
                        cx, cy = int(lm.x*w), int(lm.y*h) # coordenada de cada punto
                        #print(id, cx, cy)
                        lmList.append([id,cx,cy])
                        if draw:
                            cv.circle(img, (cx, cy), 15, (0,0,0), -1)   
        return lmList
        
def main():
    cap =cv.VideoCapture(1)
    pTime=0 #tiempo previo
    cTime=0
    detector = handDetector()
    
    while True:
        isTrue, img = cap.read()
        img = detector.findHands(img)
        lmList = detector.findPosition(img)
        if len(lmList) !=  0:
            print(lmList[8])             
        cTime = time.time()
        fps = 1/(cTime-pTime)
        pTime = cTime
        cv.putText(img, 'fps: ' + str(int(fps)), (10,30), cv.FONT_HERSHEY_PLAIN, 1, (0,0,0), 1)
        cv.imshow('video',img)
        if cv.waitKey(20) & 0xFF==ord('d'):
                 break

    cap.release()
    cv.destroyAllWindows()



if __name__ == "__main__":
    main()